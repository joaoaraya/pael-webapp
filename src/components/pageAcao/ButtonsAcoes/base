'use client';

import OpenConfirmModal from "@/components/button/OpenConfirmModal";

//import './style.scss';

type ButtonsAcoesProps = {
    tipo: string;
    status: string;
}


export default function ButtonsAcoes(props: ButtonsAcoesProps) {
    const acao = props;
    let buttons = (<></>);

    const confirmButton = (botaoTexto: string, botaoCor: string, botaoAcao: () => void, modalPergunta: string, modalDescricao: string) => (
        <OpenConfirmModal
            tagType="button"
            className={botaoCor}
            title={modalPergunta}
            text={modalDescricao}
            action={botaoAcao}
            actionText="Excluir"
        >
            <p>{botaoTexto}</p>
        </OpenConfirmModal>
    );


    if (acao.tipo === "proposta") {
        if (acao.status === "redacao") {
            buttons = (
                <>
                    {confirmButton("Pautar", "btnPrimary", () => { }, "Mover ação para pauta?", "")}

                    <button className="btnPrimary">
                        <p>Solicitar alterações</p>
                        {/* abre modal com caixa de texto + botao enviar / status = 0, alteracao = "texto..." */}
                    </button>

                    <button className="btnPrimary">
                        <p>Pautar</p>
                        {/* status = 2, data atualizada */}
                    </button>

                    <button className="btnPrimary reprovar">
                        <p>Reprovar</p>
                        {/* statusFinal = "reprovado", data atualizada*/}
                    </button>
                </>
            )
        }
    }

    return (
        <div className="buttonsAcoes">
            {buttons}
        </div>
    );




    const acao = (<div className="postAcoes">
        {acao.ativo && (
            <>
                {acao.statusAtual === "autor" && (
                    <div className="buttonsGrupo">
                        {/* Somente o Autor / se user.id_cim === 1249 */}

                        {acao.conteudoProposta?.alteracoes !== '' && (
                            <button className="btnPrimary">
                                <p>Editar proposta</p>
                                {/* abre modal para editar o texto da proposta + botao salvar */}
                            </button>
                        )}

                        <button className="btnPrimary">
                            <p>Enc. redação</p>
                            {/* status = 1, data atulizada */}
                        </button>
                    </div>
                )}

                {acao.statusAtual === "redacao" && (
                    <div className="buttonsGrupo">
                        {/* Somente o Presidente: */}

                        <button className="btnPrimary">
                            <p>Solicitar alterações</p>
                            {/* abre modal com caixa de texto + botao enviar / status = 0, alteracao = "texto..." */}
                        </button>

                        <button className="btnPrimary">
                            <p>Pautar</p>
                            {/* status = 2, data atualizada */}
                        </button>

                        <button className="btnPrimary reprovar">
                            <p>Reprovar</p>
                            {/* statusFinal = "reprovado", data atualizada*/}
                        </button>
                    </div>
                )}

                {acao.statusAtual === "pauta" && (
                    <div className="buttonsGrupo">
                        {/* Todos */}

                        <button className="btnPrimary">
                            <p>Apoiar</p>
                            {/* abre modal de confirmação + seu nome será adicionado a lista de assinaturas 
                                        se você for o numero que define o minimo (ex: assinaturas minimas: 21 e vc for o 20)
                                        ao apoiar você mudará o status = 3 + data atualizada */}
                        </button>
                    </div>
                )}

                {acao.statusAtual === "pauta" && (
                    <div className="buttonsGrupo">
                        {/* Todos */}

                        <button className="btnPrimary">
                            <p>Apoiar</p>
                            {/* abre modal de confirmação + seu nome será adicionado a lista de assinaturas */}
                        </button>

                        {/* Somente o Presidente */}

                        <button className="btnPrimary">
                            <p>Enc. comissão</p>
                            {/* abre modal de comissões + status = 4, data atualizada */}
                        </button>
                    </div>
                )}

                {acao.statusAtual === "comissao" && (
                    <div className="buttonsGrupo">
                        {/* Somente Presidente(s) da(s) Comissao(es) encaminhada(s) */}

                        <button className="btnPrimary">
                            <p>Parecer</p>
                            {/* Abre modal com um dois radio buttons (aprovar) - (reprovar) + botão de enivar (modal de confirmacao) 
                                            É possivel alterar a resposta enquanto for status = 4.*/}
                        </button>

                        {/* Somente Presidente */}

                        <button className="btnPrimary">
                            <p>Enc. comissão</p>
                            {/* abre modal de comissões */}
                        </button>

                        {/* Quanto todas as Comissões encaminhadas derem um pareecer ou a resposta nao for = "" */}
                        {acao.conteudoProposta?.comissoesEncaminhadas?.every(comissao => comissao.parecer !== '') && (
                            <>
                                <button className="btnPrimary">
                                    <p>Enc. plenário</p>
                                    {/* abre modal de confirmação, status = 5, atualiza data*/}
                                </button>

                                <button className="btnPrimary reprovar">
                                    <p>Reprovar</p>
                                    {/* abre modal de confirmação, ativo = false, statusFinal = "reprovado', data atualizada,*/}
                                </button>
                            </>
                        )}
                    </div>
                )}

                {acao.statusAtual === "plenario" && (
                    <div className="buttonsGrupo">
                        {/* Somente o Presidente */}

                        <button className="btnPrimary">
                            <p>Priorizar</p>
                            {/* só atualiza a data de atualização para NOW() */}
                        </button>

                        <button className="btnPrimary">
                            <p>Cadastrar votação</p>
                            {/* abre modal de cadastro de votos + botao gerar resultado
                                        se for: aprovado -> data atualizada, ativo = false, statusFinal = "aprovado' 
                                        se for: reprovado -> data atualizada, ativo = false, statusFinal = "reprovado'*/}
                        </button>
                    </div>
                )}
            </>
        )}

        <button className="btnSecondary">
            <p>Voltar</p>
        </button>


        {/* TESTES 
                    <OpenModal
                        tagType="button"
                        className="btnPrimary"
                        modalTitle="Comissões"
                        modalContent={<ModalEncaminharComissao />}
                        modalFooterContent={
                            <OpenConfirmModal
                                tagType="button"
                                className="btnPrimary"
                                confirmModalTitle="Deseja salvar?"
                                confirmModalText="Salvar alterações no"
                                confirmModalAction={() => { }}
                                confirmModalActionText="Salvar"
                            >
                                <p>Salvar</p>
                            </OpenConfirmModal>}
                    >
                        <p>Encaminhar..</p>
                    </OpenModal>
                    */}
    </div>);

    return (<></>)
}